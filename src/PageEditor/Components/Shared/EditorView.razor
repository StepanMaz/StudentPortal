@using StudentPortal.ComponentData.Abstractions
@inherits FluxorComponent

@inject IState<EditorState> EditorState
@inject IDispatcher Dispatcher

@code {
    [Parameter]
    public required RenderFragment<IComponentData> Editor { get; set; }

    [Parameter]
    public required RenderFragment<IComponentData> Preview { get; set; }

    private EditorDisplayMode DisplayMode => EditorState.Value.DisplayMode;
    private IComponentData Component => EditorState.Value.Page.History.Current;

    private void OnDimensionChanged(double newDimensions)
    {
        if (newDimensions < 25)
        {
            Dispatcher.Dispatch(new EditorSetDisplayModeAction(EditorDisplayMode.Preview));
        }
        else if (newDimensions > 75)
        {
            Dispatcher.Dispatch(new EditorSetDisplayModeAction(EditorDisplayMode.Editor));
        }
    }
}

@if (DisplayMode == EditorDisplayMode.Editor)
{
    @Editor(Component)
}
else if (DisplayMode == EditorDisplayMode.Preview)
{
    @Preview(Component)
}
else
{
    <MudSplitter Class="h-full" DimensionChanged="OnDimensionChanged">
        <StartContent>
            @Editor(Component)
        </StartContent>
        <EndContent>
            @Preview(Component)
        </EndContent>
    </MudSplitter>
}