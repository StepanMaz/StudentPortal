@page "/{userId}/{key}"
@rendermode InteractiveServer

@using StudentPortal.CommonComponents.Renderer
@using StudentPortal.ComponentData.Abstractions
@using StudentPortal.ComponentData.Conversion
@using System.Text.Json
@using StudentPortal.Services

@inject IPageStorageService PageStorage;
@inject ComponentDataConverter ComponentDataConverter;

@code
{
    [Parameter]
    public required string Key { get; set; }

    [Parameter]
    public required string UserId { get; set; }

    private bool IsLoading = true;
    private IComponentData? PageData;
    private string PageName = "";

    protected override async Task OnInitializedAsync()
    {
        var page = await PageStorage.GetPageByKey(UserId, Key);

        IsLoading = false;

        if (page != null)
        {
            PageData = ComponentDataConverter.Convert(page.Content);
            PageName = page.Name;
        }
    }
}

@if (IsLoading)
{
    <h1>Loading...</h1>
}
else
{
    if (PageData != null)
    {
        <h1 class="header">@PageName</h1>
        <div>
            <ComponentRenderer Component="PageData" />
        </div>
    }
    else
    {
        <h1>404: Page Not Found</h1>
    }
}
